

		hallway2.setTrap(new EventHandler() {

			@Override
			public void accept(GameDescription t) {
				// TODO Auto-generated method stub
				if(getCurrentEnemy()!=null) {
					System.out.println("A bloodied mutant with a disfigured face lashes out at you!");
				}
			}
		});
		EventHandler gasTrap = new EventHandler() {

			@Override
			public void accept(GameDescription t) {
				// TODO Auto-generated method stub
				Asylum g = (Asylum) t;
				if(g.gasVuln && !g.breathedGas) {
					g.breathedGas = true;
					g.maxMoves = 4;
					System.out.println("You're breathing in toxic gas! You don't have much time left before you lose consciousness, you need to do something right away!");
				}
			}
		};

		bathroom.setTrap(gasTrap);
		surgery.setTrap(gasTrap);

		hallway3.setTrap(new EventHandler() {
			@Override
			public void accept(GameDescription t) {
				// TODO Auto-generated method stub
				Asylum g = (Asylum) t;
				g.health = 0;
				System.out.println("GAME OVER! A death trap placed on the door tore you apart!");
				Thread.currentThread().interrupt();
			}
		});

		//checkpoint
		hallway4.setTrap(new EventHandler() {

			@Override
			public void accept(GameDescription t) {
				// TODO Auto-generated method stub
				checkpoint((Asylum)t);
			}
		});

		

		paddedCell.setTrap(new EventHandler() {

			@Override
			public void accept(GameDescription t) {
				// TODO Auto-generated method stub
				if (t.getCurrentRoom().hasLight() && getCurrentEnemy()!=null) {
					try {
						t.getMap().readArc(paddedCell, surveillance).setLockedBy(key_1.getId());
						t.getMap().readArc(paddedCell, surveillance).setLocked(true);
						paddedCell.setDescription("You are in the padded room. This is used to lock up patients in severe seizures so that they do not harm themselves. In front of you you see a mammoth being, it's the assistant director.");
						paddedCell.setLook("Apparently, you can only go back to the surveillance.");
						System.out.println("You are trapped! ......");
					} catch (Exception e) {}
				}
				if (t.getCurrentRoom().hasLight() && getCurrentEnemy()==null) {
					try {
					paddedCell.setDescription("You are in the padded room. This is used to lock up patients in severe seizures so that they do not harm themselves.");
				}
			 catch (Exception e) {}
		}
			}
		});

		office.setTrap(new EventHandler() {

			@Override
			public void accept(GameDescription t) {
				// TODO Auto-generated method stub
				if (getCurrentEnemy()!=null) {
					try {
						System.out.println("You have in front of you the mastermind behind this, the director.");

				}
			 catch (Exception e) {}
		}
				if (getCurrentEnemy()==null) {

					office.setLook("You can either go up the stairs leading to the facility's exit or you can go back to the padded cell.");
					}

			}
		});
